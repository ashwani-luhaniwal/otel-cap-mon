export type Correlators = {
    connectionId: string;
    connectionCounter: number;
    prevCompName: string;
};
export declare class Tools {
    static getBytesFromString(s: string): number[];
    static createHexString(arr: number[]): string;
    static transformNumToHexArray(num: number): string[];
    static transformNumToHexString(num: number): string;
    static encodeCorrelators(connectionId: string, connectionCounter: number, prevComp: string): string;
    static decodeCorrelators(tracestate: string): Correlators;
    /**
     * a couple of passport elements haven't the defined length
     * in that case we must fill the gap with spaces
     * */
    static addSpaces(element: string[], num: number): string[];
    static transformStringToHex(str: string): string[];
    static transformBytesToHexString(binary: string): string;
    static transformHexStringToBytes(binary: string): string;
    static transformHexToString(strAsHex: string): string;
    static transformHexToNumber(strAsHex: string): number;
    static hexStringToHexArray(str: string): string[];
    /**
     * use time tokens and a couple of random number to create a 32 Bit uuid
     */
    static createGUID(): string;
    /**
     * repeat is currently not supported in my version
     * here we use the version of mozilla
     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat
     * */
    static stringRepeat(str: string, repeat: number): string;
    /**
     * change number to hex, fill with specific count of 0 and change it to array
     * **/
    static changeNumToPassportValue(num: number, expectedByteLength: number): string[];
    private static stringToBytes;
    private static arrayBufferToBase64;
    private static validateUuid;
}

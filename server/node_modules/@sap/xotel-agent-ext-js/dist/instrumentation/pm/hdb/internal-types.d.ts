export type Client = {
    prototype: {
        commit: (callback?: Function) => unknown;
        rollback: (callback?: Function) => unknown;
        get: (key: any) => unknown;
        set: (key: any, value: any) => unknown;
        connect: (options?: any, callback?: Function) => unknown;
        disconnect: (callback?: Function) => unknown;
        close: () => unknown;
        end: () => unknown;
        destroy: (err?: Error) => unknown;
        prepare: (command: string, options?: any, callback?: Function) => unknown;
        exec: (command: string, options?: any, callback?: Function) => unknown;
        execute: (command: string, options?: any, callback?: Function) => unknown;
        setClientInfo: (key: any, value: any) => unknown;
    };
};
export type Statement = {
    prototype: {
        exec: (values: any, options?: any, callback?: Function) => unknown;
        execute: (values: any, options?: any, callback?: Function) => unknown;
        drop: (callback?: Function) => unknown;
        getParameterName: (i: any) => unknown;
        handle: (err: Error, options: any, callback: Function) => unknown;
    };
};

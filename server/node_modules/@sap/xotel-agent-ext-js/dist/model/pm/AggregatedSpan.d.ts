import { Resource } from "@opentelemetry/resources";
import { api } from "@opentelemetry/sdk-node";
import { ReadableSpan, TimedEvent } from "@opentelemetry/sdk-trace-base";
import { SpanKind } from "@opentelemetry/api";
import { SpanType } from "../../common/SpanType";
export declare class AggregatedSpan implements api.Span, ReadableSpan {
    name: string;
    kind: api.SpanKind;
    parentSpanId: string | undefined;
    startTime: api.HrTime;
    endTime: api.HrTime;
    status: api.SpanStatus;
    attributes: api.Attributes;
    links: api.Link[];
    events: TimedEvent[];
    duration: api.HrTime;
    ended: boolean;
    resource: Resource;
    instrumentationLibrary: {
        name: string;
    };
    droppedAttributesCount: number;
    droppedEventsCount: number;
    droppedLinksCount: number;
    spanType?: SpanType;
    constructor(kind: SpanKind, startTime: api.HrTime, resource: Resource, spanType?: SpanType);
    spanContext(): api.SpanContext;
    setAttribute(key: string, value: api.AttributeValue): this;
    setAttributes(attributes: api.Attributes): this;
    addEvent(name: string, attributesOrStartTime?: api.Attributes | api.TimeInput | undefined, startTime?: api.TimeInput | undefined): this;
    setStatus(status: api.SpanStatus): this;
    updateName(name: string): this;
    end(endTime?: api.TimeInput | undefined): void;
    isRecording(): boolean;
    recordException(exception: api.Exception, time?: api.TimeInput | undefined): void;
}
